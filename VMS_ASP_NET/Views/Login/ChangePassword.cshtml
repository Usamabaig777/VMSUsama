@model VMS_ASP_NET.Models.ChangePassword
@{
    ViewBag.Title = "ChangePassword";
}
<div class="container-fluid">
    <div class="animated fadeIn">
        <div class="row">
            <div class="col-12 col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <strong>Change Password</strong>
                    </div>
                    @using (Html.BeginForm("ChangePassword", "Login", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12">
                                    <div class="position-relative form-group">
                                        <label for="OldPassword" class="">Old Password<b style="color: red;"> * </b></label>
                                        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                                        @*<input name="OldPassword" type="password" class="form-control">*@
                                    </div>
                                </div>
                            </div>
                            @if (ViewBag.Error != null)
                            {
                                <div style="color:red">
                                    @ViewBag.Error
                                </div>
                            }
                            <div class="row">
                                <div class="col-12">
                                    <div class="position-relative form-group">
                                        <label for="NewPassword" class="">New Password<b style="color: red;"> * </b></label>
                                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                        @*@Html.EditorFor(m => m.NewPassword, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @*<input name="NewPassword" type="password" class="form-control">*@
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div class="position-relative form-group">
                                        <label for="ConfirmPassword" class="">Confirm Password<b style="color: red;"> * </b></label>
                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                        @*<input name="ConfirmPassword" type="password" class="form-control" value="">*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary btn-sm">
                                <i class="fa fa-pencil"></i>
                                Change Password
                            </button>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    $(document).ready(function () {
        @if (Convert.ToString(@TempData["ChangePassSuccecc"]) != null) {
            @: $.notify("@TempData["ChangePassSuccecc"]", "success");
        }
    })
</script>